import{b as C,a2 as _,w as m,a3 as A,h as f,l as x,m as P,d,a4 as g,a5 as b,o as D,c as F,G as u,z as i,t as h,F as v,O as q,a as S}from"./chunks/framework.9549a0f3.js";function y(a){return{"[object Number]":"number","[object Boolean]":"boolean","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Object]":"object","[object Null]":"null","[object Undefined]":"undefined","[object Date]":"date","[object RegExp]":"regexp","[Object Symbol]":"symbol"}[Object.prototype.toString.call(a)]}function T(a,...s){if(!s.length)return a;const e=[{data:a,mergeData:null}];return s.forEach(n=>{for(;e.length;){const{data:l,mergeData:o=n}=e.pop();Object.keys(l).forEach(t=>{const r=y(l[t]),p=y(o[t]);r==="object"&&p==="object"?e.push({data:l[t],mergeData:o[t]}):r==="array"&&p==="array"?e.push({data:l[t],mergeData:o[t]}):l[t]=o[t]})}}),a}function N(a){const s={},e=[{data:a,cloned:s}];for(;e.length;){let{cloned:n,data:l}=e.pop();for(let o in l)y(l[o])==="object"||y(l[o])==="array"?(n[o]=Array.isArray(l[o])?[]:{},e.push({data:l[o],cloned:n[o]})):n[o]=l[o]}return s}function E(a,s){return s!=null&&s.deep?N(a):{...a}}function j(a,s){let e=C(a);return _(a)&&(e=E(a,s)),s!=null&&s.manual&&m(a,()=>{const n=j(a,{deep:s.deep,manual:!1});T(e,n)},{...s,deep:!0}),e}function O(a,s={}){let e=!1,n,l=!1;return typeof s=="boolean"?e=s:{deep:e=!1,clone:n,manual:l=!1}=s,A(a)||_(a)?n||(n=j):n||(n=E),n(a,{deep:e,manual:l})}function V(a,s={}){typeof a=="object"&&(s=a,a="modelValue");const{passive:e=!1,defaultValue:n}=s||{},l=P(),o=l==null?void 0:l.emit,t=l==null?void 0:l.props;if(a||(a="modelValue"),t[a]===null&&n==null)return null;const r=`update:${a.toString()}`;if(e)return{change:p=>{o(r,p)}};if(typeof(t[a]||n)=="object"){const p=f(O(t[a]||n,!0));return m(()=>t[a],c=>{c!==p.value&&(p.value=c)}),m(p,c=>{c!==t[a]&&o(r,c)},{deep:!0}),p}return x({get(){return t[a]==null?n:t[a]},set(p){o(r,p)}})}const B=d({__name:"vmodel",props:{modelValue:{}},setup(a){const s=V();return(e,n)=>g((D(),F("input",{"onUpdate:modelValue":n[0]||(n[0]=l=>A(s)?s.value=l:null)},null,512)),[[b,C(s)]])}}),w=d({__name:"index",setup(a){const s=f(0);return(e,n)=>(D(),F(v,null,[u(B,{modelValue:s.value,"onUpdate:modelValue":n[0]||(n[0]=l=>s.value=l)},null,8,["modelValue"]),i("div",null," count: "+h(s.value),1)],64))}}),R=d({__name:"props",props:{count:{}},setup(a){const s=V("count");return(e,n)=>g((D(),F("input",{"onUpdate:modelValue":n[0]||(n[0]=l=>A(s)?s.value=l:null)},null,512)),[[b,C(s)]])}}),U=d({__name:"demo",setup(a){const s=f(0);return(e,n)=>(D(),F(v,null,[u(R,{count:s.value,"onUpdate:count":n[0]||(n[0]=l=>s.value=l)},null,8,["count"]),i("div",null,"count:"+h(s.value),1)],64))}}),$=q(`<h1 id="useemitprop" tabindex="-1">useEmitProp <a class="header-anchor" href="#useemitprop" aria-label="Permalink to &quot;useEmitProp&quot;">​</a></h1><p>获取 props 中指定 key 值，并且通过 emit 修改 props 值，默认实现 v-model</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="v-model" tabindex="-1">v-model <a class="header-anchor" href="#v-model" aria-label="Permalink to &quot;v-model&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- sub component --&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- sub.vue --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useEmitProp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-surplus</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> props </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineProps</span><span style="color:#89DDFF;">&lt;{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">modelValue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}&gt;</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> modelValue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useEmitProp</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">modelValue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- component --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sub</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sub.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">sub</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">modelValue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">sub</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> count: {{ count }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,6),I=i("h3",{id:"props",tabindex:"-1"},[S("props "),i("a",{class:"header-anchor",href:"#props","aria-label":'Permalink to "props"'},"​")],-1),J=JSON.parse('{"title":"useEmitProp","description":"","frontmatter":{},"headers":[],"relativePath":"core/useEmitProp/index.md","filePath":"core/useEmitProp/index.md"}'),z={name:"core/useEmitProp/index.md"},M=Object.assign(z,{setup(a){return(s,e)=>(D(),F("div",null,[$,u(w),I,u(U)]))}});export{J as __pageData,M as default};
